version: "3"

services:
  db-master:
    build:
      context: ./master                # 현재 경로에서 빌드
      dockerfile: Dockerfile  # master 전용 Dockerfile 사용
    restart: always              # 컨테이너 죽으면 항상 재시작
    environment:
      MYSQL_DATABASE: "db"       # 초기 생성할 DB 이름
      MYSQL_USER: "user"         # 초기 생성할 유저 이름
      MYSQL_PASSWORD: "1234"     # 초기 유저 비밀번호
      MYSQL_ROOT_PASSWORD: "1234" # root 비밀번호
    command:                     # MySQL 실행 시 기본 설정
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "4306:3306"              # 호스트 4306 → 컨테이너 3306 매핑
    container_name: master-db    # 컨테이너 이름 지정
    volumes:
      - my-db-master:/var/lib/mysql       # 데이터 파일 영속화
      - my-db-master:/var/lib/mysql-files # 파일 임포트/익스포트 영역
    networks:
      - spring-cloud               # 공용 네트워크 연결

  db-slave:
    build:
      context: ./slave                # 현재 경로에서 빌드
      dockerfile: Dockerfile  # slave 전용 Dockerfile 사용
    restart: always
    environment:
      MYSQL_DATABASE: "db"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "1234"
      MYSQL_ROOT_PASSWORD: "1234"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "4307:3306"              # 호스트 4307 → 컨테이너 3306 매핑 (slave 구분)
    container_name: slave-db
    volumes:
      - my-db-slave:/var/lib/mysql
      - my-db-slave:/var/lib/mysql-files
    networks:
      - spring-cloud

volumes:
  my-db-master:  # master DB 데이터 영속화 볼륨
  my-db-slave:   # slave DB 데이터 영속화 볼륨

networks:
  spring-cloud:
    driver: bridge  # 두 컨테이너가 같은 브릿지 네트워크를 사용
