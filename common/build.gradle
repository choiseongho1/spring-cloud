plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.msa'
version = '0.0.1-SNAPSHOT'
description = 'common'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
tasks.named('generateMetadataFileForMavenJavaPublication') {
	suppressedValidationErrors.add('dependencies-without-versions')
}


bootJar {
    enabled = false
}

jar {
	enabled = true
	 from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	 }
	 duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}
dependencies {
    // Spring Boot
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

   	compileOnly 'org.projectlombok:lombok'
   	annotationProcessor 'org.projectlombok:lombok'
   	implementation 'org.projectlombok:lombok'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    
    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Security (비밀번호 암호화용) - 공통 사용
    api 'org.springframework.security:spring-security-crypto'
    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
	enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}
